// index.js
require("dotenv").config();
const express = require("express");
const fetch = require("node-fetch");
const OpenAI = require("openai");

const app = express();
app.use(express.json());
app.use(express.static("public")); // n√§ytt√§√§ public/index.html

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// --- ElevenLabs API (√§√§ni) asetukset ---
const ELEVENLABS_API_KEY = process.env.ELEVENLABS_API_KEY;
const VOICE_ID = "puhuja-id-t√§h√§n"; // t√§nne sun oikea Voice ID

// Juuri t√§m√§ endpoint n√§kyy selaimessa Railwayn domainissa
app.get("/", (req, res) => {
  res.send("ü§ñ Niilo on hereill√§! K√§yt√§ POST /chat l√§hett√§√§ksesi viestin.");
});

// P√§√§asiallinen botti-endpoint
app.post("/chat", async (req, res) => {
  const { message } = req.body;

  if (!message) {
    return res.status(400).json({ error: "Viesti puuttuu." });
  }

  try {
    // --- OpenAI-vastaus ---
    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `
Sin√§ olet Niilo, Novera AI:n asiakaspalvelija ja br√§ndin √§√§ni.
Olet rento, ammattimainen ja helposti l√§hestytt√§v√§ nuori mies (28-30v),
joka puhuu selke√§sti ja nykyaikaisesti.

Ty√∂skentelet yrityksess√§ nimelt√§ Novyra Technologies,
ja edustat Novyra AI -teko√§lyratkaisuja.

Te tarjoatte asiakkaille mm:
- teko√§lypohjaisia chatbotteja yrityksille
- automaatiopalveluita (esim. ajanvarausj√§rjestelm√§t)
- yksinkertaisia mutta moderneja verkkosivuja
- ja tulevaisuudessa my√∂s Instagram-integraatioita,
  joissa botti voi keskustella tai kommentoida postauksia.

Tavoitteesi on aina auttaa asiakkaita ymm√§rt√§m√§√§n, mit√§ palveluita tarjoatte
ja vastata yst√§v√§llisesti mutta asiantuntevasti.
K√§yt√§ miellytt√§v√§√§ ja l√§mminhenkist√§ tyyli√§.
Jos k√§ytt√§j√§ puhuu englanniksi, vaihda sujuvasti englantiin.
          `,
        },
        { role: "user", content: message },
      ],
    });

    const reply = completion.choices[0].message.content;

    // --- ElevenLabs √§√§nen generointi ---
    const ttsResponse = await fetch(
      `https://api.elevenlabs.io/v1/text-to-speech/${VOICE_ID}`,
      {
        method: "POST",
        headers: {
          "xi-api-key": ELEVENLABS_API_KEY,
          "Content-Type": "application/json",
        },
        body: JSON.stringify({
          text: reply,
          voice_settings: { stability: 0.4, similarity_boost: 0.7 },
        }),
      }
    );

    const audioBuffer = await ttsResponse.arrayBuffer();
    const audioBase64 = Buffer.from(audioBuffer).toString("base64");

    // üîç DEBUG ‚Äì Tarkistetaan ett√§ √§√§ni oikeasti generoitui
    console.log("‚úÖ √Ñ√§ni generoitu, pituus:", audioBase64.length);

    res.json({ reply, audio: audioBase64 });
  } catch (error) {
    console.error("Virhe:", error);
    res.status(500).json({ error: "Jotain meni pieleen palvelimessa." });
  }
});

// --- Portti ---
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Niilo on k√§ynniss√§ portissa ${PORT}`);
});

