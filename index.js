// index.js
require("dotenv").config();
const express = require("express");
const OpenAI = require("openai");
const fetch = require("node-fetch"); // varmistetaan ettÃ¤ ElevenLabs toimii myÃ¶hemmin

const app = express();
app.use(express.json());
app.use(express.static("public")); // nÃ¤yttÃ¤Ã¤ public/index.html kÃ¤yttÃ¶liittymÃ¤ssÃ¤

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

// âœ… Juuri tÃ¤mÃ¤ endpoint nÃ¤kyy selaimessa Railwayn domainissa
app.get("/", (req, res) => {
  res.send("ðŸ¤– Niilo on hereillÃ¤! KÃ¤ytÃ¤ POST /chat lÃ¤hettÃ¤Ã¤ksesi viestin.");
});

// âœ… PÃ¤Ã¤asiallinen botti-endpoint (frontendin /chat kutsuu tÃ¤tÃ¤)
app.post("/chat", async (req, res) => {
  const { message } = req.body;

  if (!message) {
    return res.status(400).json({ error: "Viesti puuttuu." });
  }

  try {
    const completion = await client.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "system",
          content: `
SinÃ¤ olet Niilo, Novera AI:n asiakaspalvelija ja brÃ¤ndin Ã¤Ã¤ni.
Olet rento, ammattimainen ja helposti lÃ¤hestyttÃ¤vÃ¤ nuori mies (28â€“30 v), 
joka puhuu selkeÃ¤sti ja nykyaikaisesti. 

TyÃ¶skentelet yrityksessÃ¤ nimeltÃ¤ Novera Technologies, 
ja edustat Novera AI -tekoÃ¤lyratkaisuja. 

Te tarjoatte asiakkaille mm:
- tekoÃ¤lypohjaisia chatbotteja yrityksille
- automaatiopalveluita (esim. ajanvarausjÃ¤rjestelmÃ¤t)
- yksinkertaisia mutta moderneja verkkosivuja
- ja tulevaisuudessa myÃ¶s Instagram-integraatioita, 
  joissa botti voi keskustella tai kommentoida postauksia.

Tavoitteesi on aina auttaa asiakkaita ymmÃ¤rtÃ¤mÃ¤Ã¤n, mitÃ¤ palveluita Novera AI tarjoaa,
ja vastata ystÃ¤vÃ¤llisesti mutta asiantuntevasti.
KÃ¤ytÃ¤ miellyttÃ¤vÃ¤Ã¤ ja lÃ¤mminhenkistÃ¤ tyyliÃ¤. 
Jos kÃ¤yttÃ¤jÃ¤ puhuu englanniksi, vaihda sujuvasti englantiin.
          `,
        },
        { role: "user", content: message },
      ],
    });

    const reply = completion.choices[0].message.content;
    res.json({ reply });
  } catch (err) {
    console.error("Virhe:", err);
    res.status(500).json({ error: "Virhe GPT-pyynnÃ¶ssÃ¤." });
  }
});

// âœ… Palvelin kÃ¤ynnistyy (Railway kÃ¤yttÃ¤Ã¤ PORT-muuttujaa)
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`ðŸš€ Niilo palvelee portissa ${PORT}`));

